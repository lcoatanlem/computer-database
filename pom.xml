<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                     http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <!-- Describing the project -->
 <modelVersion>4.0.0</modelVersion>
 <groupId>com.excilys.computerdatabase</groupId>
 <artifactId>computer-database</artifactId>
 <!-- Old used jar, war as soon as we got a webapp -->
 <packaging>pom</packaging>
 <!-- version.sprint.bugfix -->
 <version>1.7.0-SNAPSHOT</version>
 <name>Computer Database Parent</name>
 <modules>
  <module>core</module>
  <module>persistence</module>
  <module>service</module>
  <module>binding</module>
  <module>console</module>
  <module>webapp</module>
 </modules>
 <!-- Externalization of the versions numbers -->
 <properties>
  <!-- Dependencies Versions -->
  <mysql.version>5.1.6</mysql.version>
  <boneCP.version>0.8.0.RELEASE</boneCP.version>
  <h2.version>1.4.191</h2.version>
  <log4j.version>1.2.17</log4j.version>
  <sl4j.version>1.7.12</sl4j.version>
  <servlets.version>3.0.1</servlets.version>
  <jstl.version>1.2</jstl.version>
  <junit.version>4.11</junit.version>
  <mockito.version>1.9.5</mockito.version>
  <dbunit.version>2.4.9</dbunit.version>
  <selenium.version>2.53.0</selenium.version>
  <maven.version>3.5.1</maven.version>
  <java.version>1.8</java.version>
  <spring.version>4.2.5.RELEASE</spring.version>
  <spring.security.version>4.1.0.RELEASE</spring.security.version>
  <hibernate.version>5.1.0.Final</hibernate.version>
  <querydsl.version>4.1.0</querydsl.version>
  <!-- Plugins Versions -->
  <maven-CS.plugin.version>2.17</maven-CS.plugin.version>
  <maven-surefire.plugin.version>2.18</maven-surefire.plugin.version>
  <maven-failsafe.plugin.version>2.19.1</maven-failsafe.plugin.version>
  <maven2-cargo.plugin.version>1.4.16</maven2-cargo.plugin.version>
  <maven-war.plugin.version>2.4</maven-war.plugin.version>
  <maven-apt.plugin.version>1.1.3</maven-apt.plugin.version>
 </properties>
 <dependencyManagement>
  <dependencies>
   <!-- Database accesses -->
   <!-- Main -->
   <dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>${mysql.version}</version>
    <scope>runtime</scope>
    <!-- if it doesn't compile anymore, it is because some libraries from this were used during compilation -->
   </dependency>
   <!-- Main pool connection -->
   <dependency>
    <groupId>com.jolbox</groupId>
    <artifactId>bonecp</artifactId>
    <version>${boneCP.version}</version>
   </dependency>
   <!-- For tests -->
   <dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>${h2.version}</version>
    <scope>test</scope>
   </dependency>
   <!-- Spring -->
   <!-- Core -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-core</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Context -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Beans -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-beans</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- AOP -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-aop</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Web -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-web</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Web MVC -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-webmvc</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- ORM -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-orm</artifactId>
    <version>${spring.version}</version>
    <type>jar</type>
    <scope>compile</scope>
   </dependency>
   <!-- Transactions -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-tx</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Jdbc (used for JdbcTemplate) -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-jdbc</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Testing -->
   <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
    <version>${spring.version}</version>
   </dependency>
   <!-- Security core -->
   <dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-core</artifactId>
    <version>${spring.security.version}</version>
   </dependency>
   <!-- Security web -->
   <dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-web</artifactId>
    <version>${spring.security.version}</version>
   </dependency>
   <!-- Security config -->
   <dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-config</artifactId>
    <version>${spring.security.version}</version>
   </dependency>
   <!-- Hibernate -->
   <!-- Core -->
   <dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-core</artifactId>
    <version>${hibernate.version}</version>
   </dependency>
   <!-- Java8 -->
   <dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-java8</artifactId>
    <version>${hibernate.version}</version>
   </dependency>
   <!-- Query dsl -->
   <!-- Core -->
   <dependency>
    <groupId>com.querydsl</groupId>
    <artifactId>querydsl-core</artifactId>
    <version>${querydsl.version}</version>
   </dependency>
   <!-- JPA -->
   <dependency>
    <groupId>com.querydsl</groupId>
    <artifactId>querydsl-jpa</artifactId>
    <version>${querydsl.version}</version>
   </dependency>
   <!-- APT -->
   <dependency>
    <groupId>com.querydsl</groupId>
    <artifactId>querydsl-apt</artifactId>
    <version>${querydsl.version}</version>
   </dependency>
   <!-- Logging -->
   <!-- DBunit needs it -->
   <dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>${log4j.version}</version>
   </dependency>
   <!-- Using Logback implementation -->
   <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-log4j12</artifactId>
    <version>${sl4j.version}</version>
   </dependency>
   <!-- Webapp -->
   <!-- Servlets -->
   <dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>${servlets.version}</version>
    <scope>provided</scope>
    <!-- Tomcat has his own implementation of servlets -->
   </dependency>
   <!-- JSTL -->
   <dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>jstl</artifactId>
    <version>${jstl.version}</version>
   </dependency>
   <!-- Testing -->
   <!-- Main -->
   <dependency>
    <groupId>junit</groupId>
    <artifactId>junit</artifactId>
    <version>${junit.version}</version>
    <scope>test</scope>
   </dependency>
   <!-- Mocking objects -->
   <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-all</artifactId>
    <version>${mockito.version}</version>
    <scope>test</scope>
   </dependency>
   <!-- Database -->
   <dependency>
    <groupId>org.dbunit</groupId>
    <artifactId>dbunit</artifactId>
    <version>${dbunit.version}</version>
    <!-- Cannot be test scope because of DBExportToXML, which is a way to persist the DB -->
   </dependency>
   <!-- Webapp -->
   <dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>${selenium.version}</version>
    <scope>test</scope>
   </dependency>
  </dependencies>
 </dependencyManagement>
 <build>
  <plugins>
   <plugin>
    <artifactId>maven-war-plugin</artifactId>
    <version>${maven-war.plugin.version}</version>
   </plugin>
   <!-- Maven configuration, specifying used JRE -->
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>${maven.version}</version>
    <configuration>
     <source>${java.version}</source>
     <target>${java.version}</target>
    </configuration>
   </plugin>
   <!-- To check the writing conventions -->
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-checkstyle-plugin</artifactId>
    <version>${maven-CS.plugin.version}</version>
    <configuration>
     <configLocation>checkstyle/checkstyle.xml</configLocation>
    </configuration>
   </plugin>
   <!-- Exclude integration tests from testing phase -->
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>${maven-surefire.plugin.version}</version>
    <configuration>
     <excludes>
      <exclude>**/integration/**</exclude>
     </excludes>
    </configuration>
   </plugin>
   <!-- Include integration tests into integration tests phase -->
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>${maven-failsafe.plugin.version}</version>
    <configuration>
     <includes>
      <include>**/integration/**</include>
     </includes>
    </configuration>
    <executions>
     <execution>
      <id>integration-tests</id>
      <goals>
       <goal>integration-test</goal>
       <goal>verify</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <!-- Start Tomcat with war during pre-integration tests and shut it down during post-integration tests -->
   <plugin>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>${maven2-cargo.plugin.version}</version>
    <configuration>
     <container>
      <containerId>tomcat8x</containerId>
      <output>${project.build.directory}/tomcat8x/container.log</output>
      <append>false</append>
      <log>${project.build.directory}/tomcat8x/cargo.log</log>
     </container>
    </configuration>
    <executions>
     <execution>
      <id>start</id>
      <phase>pre-integration-test</phase>
      <goals>
       <goal>start</goal>
      </goals>
     </execution>
     <execution>
      <id>stop</id>
      <phase>post-integration-test</phase>
      <goals>
       <goal>stop</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <!-- Querydsl plugin -->
   <plugin>
    <groupId>com.mysema.maven</groupId>
    <artifactId>apt-maven-plugin</artifactId>
    <version>${maven-apt.plugin.version}</version>
    <executions>
     <execution>
      <goals>
       <goal>process</goal>
      </goals>
      <configuration>
       <outputDirectory>target/generated-sources/java</outputDirectory>
       <processor>com.querydsl.apt.hibernate.HibernateAnnotationProcessor</processor>
      </configuration>
     </execution>
    </executions>
   </plugin>
  </plugins>
 </build>
 <!-- Reporting plugins -->
 <reporting>
  <plugins>
   <!-- Maven versions plugin -->
   <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>versions-maven-plugin</artifactId>
    <reportSets>
     <reportSet>
      <reports>
       <report>dependency-updates-report</report>
       <report>plugin-updates-report</report>
       <report>property-updates-report</report>
      </reports>
     </reportSet>
    </reportSets>
   </plugin>
  </plugins>
 </reporting>
</project>