<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                     http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Describing the project -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.excilys.computerdatabase</groupId>
	<artifactId>computer-database</artifactId>
	<!-- Old used jar, war as soon as we got a webapp -->
	<packaging>war</packaging>
	<!-- version.sprint.bugfix-(SNAPSHOT = temporary build, TODO cf Maven doc) -->
	<version>1.3.1-SNAPSHOT</version>
	<name>Computer Database Archetype</name>

	<!-- Externalization of the versions numbers -->
	<properties>
		<mysqlVersion>5.1.6</mysqlVersion>
		<boneCPVersion>0.8.0.RELEASE</boneCPVersion>
		<h2Version>1.4.191</h2Version>
		<log4jVersion>1.2.17</log4jVersion>
		<sl4jVersion>1.7.12</sl4jVersion>
		<servletsVersion>3.0.1</servletsVersion>
		<jstlVersion>1.2</jstlVersion>
		<junitVersion>4.11</junitVersion>
		<mockitoVersion>1.9.5</mockitoVersion>
		<dbunitVersion>2.4.9</dbunitVersion>
		<seleniumVersion>2.53.0</seleniumVersion>
		<mavenVersion>3.5.1</mavenVersion>
		<javaVersion>1.8</javaVersion>
		<mavenCSPluginVersion>2.17</mavenCSPluginVersion>
	</properties>

	<dependencies>
		<!-- Database accesses -->
		<!-- Main -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysqlVersion}</version>
			<scope>runtime</scope>
			<!-- if it doesn't compile anymore, it is because some libraries from 
				this were used during compilation -->
		</dependency>
		<!-- Main pool connection -->
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
			<version>${boneCPVersion}</version>
		</dependency>
		<!-- For tests -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2Version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<!-- DBunit needs it -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4jVersion}</version>
		</dependency>
		<!-- Using Logback implementation -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${sl4jVersion}</version>
		</dependency>

		<!-- Webapp -->
		<!-- Servlets -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servletsVersion}</version>
			<scope>provided</scope>
			<!-- Tomcat has his own implementation of servlets -->
		</dependency>
		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstlVersion}</version>
		</dependency>

		<!-- Testing -->
		<!-- Main -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junitVersion}</version>
			<scope>test</scope>
		</dependency>
		<!-- Mocking objects -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockitoVersion}</version>
			<scope>test</scope>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunitVersion}</version>
			<!-- Cannot be test scope because of DBExportToXML, which is a way to 
				persist the DB -->
		</dependency>
		<!-- Webapp -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${seleniumVersion}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- TODO cargo : plugin failsafe pour faire pre et post, exclure selenium 
		des tests unitaires -->

	<build>
		<plugins>
			<!-- Maven configuration, specifying used JRE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${mavenVersion}</version>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>

			<!-- To check the writing conventions -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${mavenCSPluginVersion}</version>
				<configuration>
					<configLocation>checkstyle/checkstyle.xml</configLocation>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
